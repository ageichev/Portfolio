{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "import pandas as pd\n",
    "from datetime import timedelta\n",
    "from datetime import datetime\n",
    "\n",
    "from airflow import DAG\n",
    "from airflow.decorators import dag, task\n",
    "from airflow.operators.python import PythonOperator\n",
    "\n",
    "from io import StringIO\n",
    "\n",
    "VGsales = '/var/lib/airflow/airflow.git/dags/a.batalov/vgsales.csv'\n",
    "VGsales_file = 'vgsales.csv'\n",
    "\n",
    "\n",
    "default_args = {\n",
    "    'owner': 'j-konoplev',\n",
    "    'depends_on_past': False,\n",
    "    'retries': 2,\n",
    "    'retry_delay': timedelta(minutes=5),\n",
    "    'start_date': datetime(2023, 01, 05),\n",
    "}\n",
    "schedule_interval = '55 21 * * *'\n",
    "\n",
    "\n",
    "@dag(default_args=default_args, catchup=False)\n",
    "def j_konoplev_3_lesson_airflow():\n",
    "    @task()\n",
    "    def get_data():\n",
    "        data = pd.read_csv(VGsales)\n",
    "        return data\n",
    "\n",
    "    @task()\n",
    "    def get_top_1_game_sales(data):\n",
    "        data = pd.read_csv(StringIO(data))\n",
    "        year = 1994 + hash(f'j-konoplev-25') % 23\n",
    "        top_game_sales = data[data.Year == year].groupby('Name').agg({'Global_Sales':'sum'})\n",
    "        top_1_game_sales = top_game_sales[top_game_sales.Global_Sales == top_game_sales.Global_Sales.max()]\n",
    "        return top_1_game_sales.to_csv(index=True)\n",
    "\n",
    "    @task()\n",
    "    def get_top_1_eu_sales(data):\n",
    "        data = pd.read_csv(StringIO(data))\n",
    "        year = 1994 + hash(f'j-konoplev-25') % 23\n",
    "        top_eu_sales = data[data.Year == year].groupby('Genre').agg({'EU_Sales':'sum'})\n",
    "        top_1_eu_sales = top_eu_sales[top_eu_sales.EU_Sales == top_eu_sales.EU_Sales.max()]\n",
    "        return top_1_eu_sales.to_csv(index=True)\n",
    "\n",
    "    @task()\n",
    "    def get_top_more_1_ml(data):\n",
    "        data = pd.read_csv(StringIO(data))\n",
    "        year = 1994 + hash(f'j-konoplev-25') % 23\n",
    "        more_1_ml = data[data.Year == year].groupby('Platform').agg({'NA_Sales':'sum'})\n",
    "        top_more_1_ml = more_1_ml.query('NA_Sales > 1').sort_values('NA_Sales', ascending=False)\n",
    "        return top_more_1_ml.to_csv(index=True)       \n",
    "\n",
    "    @task()        \n",
    "    def get_top_jp_publisher(data):\n",
    "        data = pd.read_csv(StringIO(data))\n",
    "        top_jp_mean_publisher = data[data.Year == year].groupby('Publisher').agg({'JP_Sales':'mean'})\n",
    "        top_jp_publisher = top_jp_mean_publisher[top_jp_mean_publisher.JP_Sales == top_jp_mean_publisher.JP_Sales.max()]\n",
    "        return top_jp_publisher.to_csv(index=True)\n",
    "\n",
    "    @task()       \n",
    "    def get_eu_better_jp(data):\n",
    "        data = pd.read_csv(StringIO(data))\n",
    "        year = 1994 + hash(f'j-konoplev-25') % 23\n",
    "        data['EU_JP_Sales_diff'] = data['EU_Sales'] - data['JP_Sales']\n",
    "        eu_better_jp = data[data.Year == year].query('EU_JP_Sales_diff > 0').Name.nunique()\n",
    "        return eu_better_jp.to_csv(index=False)        \n",
    "\n",
    "\n",
    "\n",
    "    @task()\n",
    "    def print_data(top_1_game_sales, top_1_eu_sales, top_more_1_ml, top_jp_publisher, eu_better_jp):\n",
    "\n",
    "        date = ''\n",
    "\n",
    "        print(f'Самая продаваемая игра в мире {date}')\n",
    "        print(top_1_game_sales)\n",
    "\n",
    "        print(f'Самый продаваемый игровой жанр в Европе {date}')\n",
    "        print(top_1_eu_sales)\n",
    "\n",
    "        print(f'Платформы с миллионными тиражами {date}')\n",
    "        print(top_more_1_ml)\n",
    "\n",
    "        print(f'Самый успешный издатель в Японии {date}')\n",
    "        print(top_jp_publisher)\n",
    "\n",
    "        print(f'Количество игр с продажами в Европе лучше, чем в Японии {date}')\n",
    "        print(eu_better_jp)\n",
    "\n",
    "        \n",
    "        data = get_data()\n",
    "        top_1_game_sales = get_top_1_game_sales(data)\n",
    "        top_1_eu_sales = get_top_1_eu_sales(data)\n",
    "        top_more_1_ml = get_top_more_1_ml(data)\n",
    "        top_jp_publisher = get_top_jp_publisher(data)\n",
    "        eu_better_jp = get_eu_better_jp(data)\n",
    "        print_data(top_1_game_sales, top_1_eu_sales, top_more_1_ml, top_jp_publisher, eu_better_jp)\n",
    "        \n",
    "j_konoplev_3_lesson_airflow = j_konoplev_3_lesson_airflow()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
